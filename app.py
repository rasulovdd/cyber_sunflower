import telebot
#from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from requests import get
from dotenv import load_dotenv
import os
from time import sleep
from source.keyboard import inline, reply
from source.database import db
from source.log import logging
from source.utils import is_int
load_dotenv()
   
#–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
api_tokken = os.getenv('api_tokken')
app_debug = os.getenv('debug_on')
#users_id_all = os.getenv('users_id')
#users_id = users_id_all.split(",")
my_host = os.getenv('my_host')
my_port = os.getenv('my_port')
bot_tokken = os.getenv('bot_tokken')
admins_id = os.getenv('admins_id')

bot_tokken = os.getenv('bot_tokken') #–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
Bot = telebot.TeleBot(bot_tokken) #–Ω–∞–∑–Ω–∞—á–∞–µ–º —Ç–æ–∫–∫–µ–Ω –≤ —Ç–µ–ª–µ–±–æ—Ç

# -----------------------------------------------------------------
Bot = telebot.TeleBot(bot_tokken) #–Ω–∞–∑–Ω–∞—á–∞–µ–º —Ç–æ–∫–∫–µ–Ω –≤ —Ç–µ–ª–µ–±–æ—Ç
Bot.delete_my_commands(scope=None, language_code=None)
Bot.set_my_commands(
    commands=[
        telebot.types.BotCommand("start", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        telebot.types.BotCommand("id", "üë§ –¢–µ–ª–µ–≥—Ä–∞–º ID"),
        # telebot.types.BotCommand("test", "–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
    ],
)
# -----------------------------------------------------------------

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start
@Bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è '/start' """
    user_id = message.from_user.id
    full_name = message.from_user.full_name
    
    if db.is_registered(user_id):
        Bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç ü§ù\n–†–∞–¥ –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é üëá")
        #–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        main_menyu(user_id)
        #–æ–±–Ω—É–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.set_status(user_id,0)
    else:
        db.add_userid_main_db(user_id) #–¥–æ–±–∞–≤–∏—Ç—å user_id –≤ –æ–±—â–∏—é –±–∞–∑—É
        #—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users
        db.create_table_user(user_id)
        #–¥–æ–±–∞–≤–ª—è–µ–º —Ç—É–¥–∞ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
        db.add_userid(user_id) #–¥–æ–±–∞–≤–∏—Ç—å user_id –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –±–∞–∑—É
        Bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç ü§ù\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é üëá", reply_markup=reply.keyboard("MAIN"))
        #–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        main_menyu(user_id)
        #—É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
        Bot.send_message(admins_id, 
                         f'‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n<a href="tg://user?id={user_id}">{full_name}</a>', 
                         parse_mode='HTML')
        
    if app_debug == "1":
        logging.info(f'[BOT] [UserID: {user_id}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã test
@Bot.message_handler(commands=['test'])
def send_welcome(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è '/test' """
    user_id = message.from_user.id
    print (admins_id) #debug
    if int(user_id) == int(admins_id):
        msg_id=db.get_msg_id(user_id, 10)
        print (msg_id)

    

def main_menyu(user_id):
    msg_id = db.get_msg_id(user_id, 10)
    if msg_id:
        for msg in msg_id:
            Bot.delete_message(user_id, msg)  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    #–æ—á–∏—â–∞–µ–º msg_id
    db.del_msg_id(user_id,10)

    method_1="–ö–∞–∫ —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –≥–µ–∫—Ç–∞—Ä –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏"
    method_2="–ö–∞–∫ —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω–æ–∫ –Ω–∞ –ø–æ–≥–æ–Ω–Ω—ã–π –º–µ—Ç—Ä"
    method_3="–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Ä–∞—Å—Ö–æ–¥ —Å–µ–º—è–Ω –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞ 1 –≥–∞"
    #method_1
    msg_1=Bot.send_message(user_id, method_1, reply_markup=inline.button("method_1"))
    #–ø–∏—à–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è
    db.set_msg_id(user_id, msg_1.message_id,10)
    #method_2
    msg_2=Bot.send_message(user_id, method_2, reply_markup=inline.button("method_2"))
    #–ø–∏—à–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è
    db.set_msg_id(user_id, msg_2.message_id,10)
    #method_3
    msg_3=Bot.send_message(user_id, method_3, reply_markup=inline.button("method_3"))
    #–ø–∏—à–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è
    db.set_msg_id(user_id, msg_3.message_id,10)

# —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –ù–ê–ß–ê–õ–û –≤—Å–µ–≥–æ
@Bot.message_handler(content_types=['text'], chat_types=['private'])
def handle_command(message):
    user_id = message.from_user.id
    status=db.get_status(user_id)
    user_text = message.text 
    if user_text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        #—É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
        Bot.delete_message(user_id, message.message_id)
        #–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é 
        main_menyu(user_id)
        #–æ–±–Ω—É–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        db.set_status(user_id, 0)
        if status == 11:
            print ("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ method_1")
        elif status == 21:
            print ("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ method_2")
        elif status == 31:
            print ("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ method_3")
            
    elif status == 11:
        print (user_id, "| method_1 | c—Ç–∞—Ç—É—Å", status) #debug
        if is_int(user_text):
            db.set_shirina_mej_sm(user_id, user_text)
            Bot.send_message(user_id, f"–®–∏—Ä–∏–Ω–∞ –º–µ–∂–¥—É—Ä—è–¥–∏–π, <b>{user_text} —Å–º</b>", parse_mode="HTML")
            db.set_status(user_id,12)
            Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –ø–æ–≥–æ–Ω–Ω—ã–π –º–µ—Ç—Ä, –®–¢</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        else:
            Bot.send_message(user_id, "–í–≤–∏–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö (1234567890)")    
    elif status == 12:
        print (user_id, "| method_1 | c—Ç–∞—Ç—É—Å", status) #debug
        if is_int(user_text):
            #db.set_kol_sem_sht(user_id, user_text)
            Bot.send_message(user_id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –ø–æ–≥–æ–Ω–Ω—ã–π –º–µ—Ç—Ä, <b>{user_text} —à—Ç</b>", parse_mode="HTML")
            shirina_mej_sm = db.get_shirina_mej_sm(user_id)
            result_1 = int(10000/int(shirina_mej_sm)/100*int(user_text)*10000)
            Bot.send_message(user_id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –≥–µ–∫—Ç–∞—Ä:\n‚úÖ <b>{result_1} —à—Ç</b>", parse_mode="HTML")
            result_2 = 100/int(user_text)
            Bot.send_message(user_id, f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–µ–º–µ–Ω–∞–º–∏:\n‚úÖ <b>{result_2} —Å–º</b>", parse_mode="HTML")
            db.set_status(user_id,0)
            Bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —è –ø–æ–∫–∞–∂—É –í–∞–º –º–µ–Ω—é üëá", reply_markup=reply.keyboard("MAIN"))
        else:
            Bot.send_message(user_id, "–í–≤–∏–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö (1234567890)")            


    elif status == 21:
        print (user_id, "| method_2 | c—Ç–∞—Ç—É—Å", status) #debug
    
    elif status == 31:
        print (user_id, "| method_3 | c—Ç–∞—Ç—É—Å", status) #debug
        #—è —Ç—É—Ç
        if is_int(user_text):
            db.set_massa_1000(user_id, user_text)
            Bot.send_message(user_id, f"–ú–∞—Å—Å–∞ 1000 —Å–µ–º—è–Ω–æ–∫, <b>{user_text} –≥</b>", parse_mode="HTML")
            db.set_status(user_id,32)
            Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –ø–æ–≥–æ–Ω–Ω—ã–π –º–µ—Ç—Ä, –®–¢</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        else:
            Bot.send_message(user_id, "–í–≤–∏–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö (1234567890)")  

    elif status == 32:
        print (user_id, "| method_3 | c—Ç–∞—Ç—É—Å", status) #debug
        if is_int(user_text):
            db.set_kol_sem_sht(user_id, user_text)
            Bot.send_message(user_id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–º—è–Ω –Ω–∞ –ø–æ–≥–æ–Ω–Ω—ã–π –º–µ—Ç—Ä, <b>{user_text} —à—Ç</b>", parse_mode="HTML")
            db.set_status(user_id,33)
            Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–®–∏—Ä–∏–Ω–∞ –º–µ–∂–¥—É—Ä—è–¥–∏–π, –°–ú</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        else:
            Bot.send_message(user_id, "–í–≤–∏–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö (1234567890)")  
    
    elif status == 33:
        print (user_id, "| method_3 | c—Ç–∞—Ç—É—Å", status) #debug
        if is_int(user_text):
            db.set_kol_sem_sht(user_id, user_text)
            Bot.send_message(user_id, f"–®–∏—Ä–∏–Ω–∞ –º–µ–∂–¥—É—Ä—è–¥–∏–π, <b>{user_text} —Å–º</b>", parse_mode="HTML")
            massa_1000 = db.get_massa_1000(user_id)
            kol_sem_sht = db.get_kol_sem_sht(user_id)
            result = int(massa_1000)*int(kol_sem_sht)*(10000/int(user_text)*100)/1000/1000
            Bot.send_message(user_id, f"–†–∞—Å—Ö–æ–¥ —Å–µ–º—è–∫:\n‚úÖ <b>{result} –∫–≥</b>", parse_mode="HTML")
            db.set_status(user_id,0)
            Bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —è –ø–æ–∫–∞–∂—É –í–∞–º –º–µ–Ω—é üëá", reply_markup=reply.keyboard("MAIN"))
        else:
            Bot.send_message(user_id, "–í–≤–∏–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ü–∏—Ñ—Ä–∞—Ö (1234567890)") 


@Bot.message_handler(commands=['id'])
def send_id(message):
    """ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è '/id'. """
    if message.chat.type != 'private':
        Bot.send_message(message.chat.id, f"ID —á–∞—Ç–∞: {message.chat.id}")
    else:
        Bot.send_message(message.from_user.id, f"–í–∞—à ID: {message.from_user.id}")


@Bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    user_id = call.from_user.id  # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    #print (call.data) #debug
    all_msg = db.get_msg_id(user_id, 10)
    #print (call.message.id) #debug
    if all_msg:
        for msg in all_msg:
            if int(msg) != int(call.message.id):
                Bot.delete_message(user_id, msg)  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    #–æ—á–∏—â–∞–µ–º msg_id
    db.del_msg_id(user_id, 10)
    # —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    Bot.edit_message_text(
            chat_id=user_id,
            message_id=call.message.id,
            text=f"{call.message.text}\nü§ù –ü—Ä–∏–Ω—è–ª"
        )
    if call.data == "method_1":
        Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–®–∏—Ä–∏–Ω–∞ –º–µ–∂–¥—É—Ä—è–¥–∏–π, –°–ú</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        db.set_status(user_id, 11)
    elif call.data == "method_2":
        Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–†–∞—Å—Ö–æ–¥ —Å–µ–º—è–Ω –Ω–∞ –ø–æ–ª–µ, –ö–ì</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        db.set_status(user_id, 21)
    elif call.data == "method_3":
        Bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n<b>–ú–∞—Å—Å–∞ 1000 —Å–µ–º—è–Ω–æ–∫, –ì</b>\n(–¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤ —Ü–∏—Ñ—Ä–∞—Ö...)", parse_mode="HTML")
        db.set_status(user_id, 31)

# –ó–∞–ø—É—Å–∫ APP
while True:
    try:
        logging.info('[BOT] –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')
        #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–µ–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –∞–¥–º–∏–Ω—É
        Bot.send_message(2964812, "Bot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ bot-test –∑–∞–ø—É—Å—Ç–∏–ª—Å—è") 
        #—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users
        db.create_table_user("")
        #–ù–µ–ø—Ä–µ–∫—Ä–∞—â–∞—é—â–∞—è—Å—è –ø—Ä–æ—Å–ª—É—à–∫–∞ –Ω–∞—à–∏—Ö —á–∞—Ç–æ–≤
        Bot.polling(none_stop=True, interval=0,  timeout=60) 
    except Exception as my_bot_error:
        logging.info(f'[BOT] startup, –û—à–∏–±–∫–∞: {my_bot_error}')
        logging.info(f'[BOT] startup, –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ ........')
        sleep(10) #–∂–¥–µ–º 10 —Å–µ–∫
        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        Bot.send_message(admins_id, f"–û—à–∏–±–∫–∞: {my_bot_error}")
        Bot.send_message(admins_id, "Bot —É–ø–∞–ª –æ—Ç–∂–∞–ª—Å—è –∏ –≤—Å—Ç–∞–ª") # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    sleep(10) #–∂–¥–µ–º 10 —Å–µ–∫
    logging.info(f'[BOT] –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥')

